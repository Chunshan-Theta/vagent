version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY}
        - REDIS_URL=${REDIS_URL}
    image: vagent-app
    volumes:
      - ./local:/app/local
    ports:
      - "9272:3000"
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - NEWDEAN_ACCOUNT_LIST_FILE=${NEWDEAN_ACCOUNT_LIST_FILE}
      - DELTAWW_ACCOUNT_LIST_FILE=${DELTAWW_ACCOUNT_LIST_FILE}
      - DELTAWW_ACCOUNT_LIST_FILE_V1=${DELTAWW_ACCOUNT_LIST_FILE_V1}
      - DELTAWW_ACCOUNT_LIST_FILE_V2=${DELTAWW_ACCOUNT_LIST_FILE_V2}
      - AUDIO_STORAGE_GOOGLE_AUTH=${AUDIO_STORAGE_GOOGLE_AUTH}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - vagent-network

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - vagent-network

  pgadmin:
    image: dpage/pgadmin4:7.5
    user: root
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:5050"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: "False"
    depends_on:
      - db
    networks:
      - vagent-network

  cache:
    image: redis:7-alpine
    command: redis-server --appendonly yes --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - "6479:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - vagent-network

  ffmpeg:
    image: jrottenberg/ffmpeg:latest
    container_name: ffmpeg
    command: -version
    networks:
      - vagent-network

volumes:
  postgres_data:
  redis_data:

networks:
  vagent-network:
    driver: bridge