apiVersion: v1
kind: ConfigMap
metadata:
  name: vagent-config
data:
  NODE_ENV: "production"
  POSTGRES_HOST: "postgres"
  POSTGRES_PORT: "5432"
---
apiVersion: v1
kind: Secret
metadata:
  name: vagent-secrets
type: Opaque
stringData:
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  DATABASE_URL: ${DATABASE_URL}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vagent-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vagent-app
  template:
    metadata:
      labels:
        app: vagent-app
    spec:
      containers:
      - name: vagent-app
        image: vagent-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: vagent-config
              key: NODE_ENV
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: vagent-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: vagent-config
              key: POSTGRES_PORT
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: vagent-secrets
              key: OPENAI_API_KEY
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: vagent-secrets
              key: DATABASE_URL
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: vagent-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vagent-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: vagent-secrets
              key: POSTGRES_DB
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16-alpine
        envFrom:
        - secretRef:
            name: vagent-secrets
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 30
          periodSeconds: 20
        startupProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          failureThreshold: 30
          periodSeconds: 10
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: vagent-app
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000
  selector:
    app: vagent-app
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: 5432
  selector:
    app: postgres

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi 